[gd_scene load_steps=7 format=3 uid="uid://becs2dg75r70e"]

[ext_resource type="Texture2D" uid="uid://bg4ox5sludd5f" path="res://icon.svg" id="2_0m5g0"]

[sub_resource type="Shader" id="Shader_60in0"]
code = "// HSV to RBG from https://www.rapidtables.com/convert/color/hsv-to-rgb.html
// Rotation matrix from https://en.wikipedia.org/wiki/Rotation_matrix

shader_type canvas_item;

uniform float strength: hint_range(0., 1.) = 0.5;
uniform float speed: hint_range(0., 10.) = 0.5;
uniform float angle: hint_range(0., 360.) = 0.;
uniform sampler2D noise_tex : hint_default_white;
uniform float dissolve_progress : hint_range(0.0, 1.0) = 0.0; 

void fragment() {
	vec4 tex_color = texture(TEXTURE, UV);
    float noise_value = texture(noise_tex, UV).r;
	float hue = UV.x * cos(radians(angle)) - UV.y * sin(radians(angle));
	hue = fract(hue + fract(TIME  * speed));
	float x = 1. - abs(mod(hue / (1./ 6.), 2.) - 1.);
	vec3 rainbow;
	if(hue < 1./6.){
		rainbow = vec3(1., x, 0.);
	} else if (hue < 1./3.) {
		rainbow = vec3(x, 1., 0);
	} else if (hue < 0.5) {
		rainbow = vec3(0, 1., x);
	} else if (hue < 2./3.) {
		rainbow = vec3(0., x, 1.);
	} else if (hue < 5./6.) {
		rainbow = vec3(x, 0., 1.);
	} else {
		rainbow = vec3(1., 0., x);
	}
	vec4 color = texture(TEXTURE, UV);
	if (noise_value < dissolve_progress) {
        tex_color.a = 0.0;
    }
	COLOR = mix(tex_color, vec4(rainbow, tex_color.a), strength);
   
}
"

[sub_resource type="Gradient" id="Gradient_l68et"]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_0m5g0"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_vgm7v"]
color_ramp = SubResource("Gradient_l68et")
noise = SubResource("FastNoiseLite_0m5g0")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_vgm7v"]
shader = SubResource("Shader_60in0")
shader_parameter/strength = 0.429
shader_parameter/speed = 0.519
shader_parameter/angle = 51.429
shader_parameter/noise_tex = SubResource("NoiseTexture2D_vgm7v")
shader_parameter/dissolve_progress = 0.0

[node name="Icon" type="Sprite2D"]
material = SubResource("ShaderMaterial_vgm7v")
position = Vector2(311, 164)
texture = ExtResource("2_0m5g0")
